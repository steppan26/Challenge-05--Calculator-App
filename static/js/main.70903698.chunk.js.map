{"version":3,"sources":["Components/Theme.js","Components/Screen.js","Containers/Header.js","Components/Button.js","Containers/Calculator.js","Containers/App.js","index.js"],"names":["Theme","activeTheme","className","id","style","gridArea","Screen","x","screenText","formatedScreenText","toString","replace","substring","Header","Button","text","gridName","fontSize","bgColor","fontColor","shadow","shadowColor","buttonClass","backgroundColor","boxShadow","color","Calculator","App","createButtons","buttonsArray","Array","from","document","getElementsByClassName","forEach","btn","addEventListener","event","getKeyCode","target","textContent","parseInt","keyCode","createThemeToggler","getElementById","state","setState","setHeadingFontColor","theme","key","console","log","button","numberButtonInput","applyModifier","String","slice","length","parseFloat","storedValue","activeModifier","newValue","total","screenTextString","includes","modifier","this","themeClassName","Component","ReactDOM","render","StrictMode"],"mappings":"qYAmBeA,EAhBD,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACZ,OACI,sBAAKC,UAAU,eAAf,UACI,uCACA,sBAAKA,UAAU,gBAAgBC,GAAG,gBAAlC,UACI,mCACA,mCACA,mCACA,qBAAKD,UAAU,cAAcC,GAAG,gBAAhC,SACI,qBAAKD,UAAU,gBAAgBE,MAAO,CAACC,SAASJ,cCWrDK,G,MApBA,SAAC,GAAkB,IACJC,EADbC,EAAgB,EAAhBA,WAWTC,GAVsBF,EAUgBC,EATvCA,GAAa,GACZD,EAAIA,EAAEG,WAAWC,QAAQ,MAAO,KACvBD,WAAWC,QAAQ,wBAAyB,KAChC,IAAfH,EACC,IAEAA,EAAWE,YAGgCE,UAAU,EAAE,IAElE,OACI,qBAAKV,UAAU,SAASC,GAAG,aAA3B,SACI,6BAAKM,QCDFI,EAZA,SAAC,GAAiC,IAA/BZ,EAA8B,EAA9BA,YAAaO,EAAiB,EAAjBA,WAC3B,OACI,sBAAKN,UAAU,aAAaC,GAAG,aAA/B,UACI,sBAAKD,UAAU,SAAf,UACI,oBAAIA,UAAU,QAAd,kBACA,cAAC,EAAD,CAAOD,YAAaA,OAExB,cAAC,EAAD,CAAQO,WAAYA,QCQjBM,G,YAjBA,SAAC,GAAgF,IAA7EC,EAA4E,EAA5EA,KAAMC,EAAsE,EAAtEA,SAAUC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,UAC5CC,EAAS,mBAD4E,EAA9BC,YACX,SAC9CC,EAAc,YAFyE,EAAjBpB,UAG1E,OACI,qBAAKA,UAAWoB,EAChBlB,MAAO,CACHC,SAAS,GAAD,OAAIW,GACZC,SAAS,GAAD,OAAIA,GACZM,gBAAgB,GAAD,OAAIL,GACnBM,UAAUJ,EACVK,MAAM,GAAD,OAAIN,IANb,SAQI,4BAAIJ,QCcDW,EAzBI,WACf,OACI,sBAAKxB,UAAU,mBAAf,UACI,cAAC,EAAD,CAAQA,UAAU,MAAMa,KAAK,IAAIC,SAAS,QAAQC,SAAS,QAAQE,UAAU,0BAA0BE,YAAY,mCACnH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,QAAQC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACpH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,OAAOC,SAAS,OAAQE,UAAU,0BAA0BE,YAAY,mCAClH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,MAAMC,SAAS,MAAMC,SAAS,QAAQE,UAAU,4BAA4BE,YAAY,+BAA+BH,QAAQ,6BAC5J,cAAC,EAAD,CAAQhB,UAAU,MAAMa,KAAK,IAAIC,SAAS,OAAOC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACnH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,OAAOC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACnH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,MAAMC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCAClH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,OAAOC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACnH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,MAAMC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCAClH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,MAAMC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCAClH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,QAAQC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACpH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,QAAQC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACpH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,MAAMC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCAClH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,OAAOC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACnH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,SAASC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACrH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,IAAIC,SAAS,WAAWC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACvH,cAAC,EAAD,CAAQnB,UAAU,MAAMa,KAAK,QAAQC,SAAS,QAAQC,SAAS,QAAQE,UAAU,4BAA4BE,YAAY,+BAA+BH,QAAQ,6BAChK,cAAC,EAAD,CAAQhB,UAAU,MAAMa,KAAK,IAAIC,SAAS,SAASC,SAAS,QAAQE,UAAU,4BAA4BE,YAAY,gCAAgCH,QAAQ,kCCwT3JS,E,kDAzUZ,aAAc,IAAD,8BACX,gBAoBFC,cAAgB,WACf,IAAMC,EAAeC,MAAMC,KAAKC,SAASC,uBAAuB,QAGhEJ,EAAaK,SAAQ,SAACC,GACpBA,EAAIC,iBAAiB,SAAS,SAACC,GAC7B,EAAKC,WAAWD,EAAME,OAAOC,YAAaX,MAE5C,MAIFG,SAASI,iBAAiB,WAAW,SAACC,GAAU,EAAKC,WAAWG,SAASJ,EAAMK,SAAUb,OAjC7E,EAoCdc,mBAAqB,WACCX,SAASY,eAAe,iBAChCR,iBAAiB,SAAS,WACpC,IAAInC,EAAc,EAAK4C,MAAM5C,YACzBA,GAAe,EACjBA,EAAc,EAEdA,GAA4B,EAE9B,EAAK6C,SAAS,CAAC7C,YAAaA,IAC5B,EAAK8C,0BA9CK,EAkDdA,oBAAsB,WACpB,IAAMvC,EAAawB,SAASY,eAAe,cACK,WAA7C,EAAKC,MAAMG,MAAM,EAAKH,MAAM5C,aAC7BO,EAAWJ,MAAMqB,MAAQ,4BAEzBjB,EAAWJ,MAAMqB,MAAQ,2BAvDf,EA2Dda,WAAa,SAACW,EAAKpB,GACjB,OAAOoB,GACL,QACEC,QAAQC,IAAIF,EAAK,eACjB,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,GACHpB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,GACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,GACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,GACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,IACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,IACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,GAEL,KAAK,IACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,GAEL,KAAK,IACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,GAEL,KAAK,IACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,GAEL,KAAK,IACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,aACR,EAAKa,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,IACHvB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,cACR,EAAKc,cAAcF,EAAOZ,aAC1B,EAAKM,SAAS,CAACtC,WAAY,QAGjC,MACA,IAAK,IAEL,KAAK,IACHqB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,cACR,EAAKc,cAAcF,EAAOZ,aAC1B,EAAKM,SAAS,CAACtC,WAAY,QAGjC,MACA,IAAK,IAEL,KAAK,IACHqB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,cACR,EAAKc,cAAcF,EAAOZ,aAC1B,EAAKM,SAAS,CAACtC,WAAY,QAGjC,MACA,IAAK,IAEL,KAAK,IACHqB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,cACR,EAAKc,cAAcF,EAAOZ,aAC1B,EAAKM,SAAS,CAACtC,WAAY,QAGjC,MACA,IAAK,IAEL,KAAK,IACHqB,EAAaK,SAAQ,SAACkB,GACM,MAAvBA,EAAOZ,cACR,EAAKc,cAAcF,EAAOZ,aAC1B,EAAKM,SAAS,CAACtC,WAAY,QAGjC,MACA,IAAK,MAEL,KAAK,EACHqB,EAAaK,SAAQ,SAACkB,GACpB,GAA0B,QAAvBA,EAAOZ,YAAsB,CAC9B,IAAIhC,EAAa+C,OAAO,EAAKV,MAAMrC,aACnCA,EAAaA,EAAWgD,MAAM,GAAG,IACnBC,QAAU,EACtB,EAAKX,SAAS,CAACtC,WAAW,IAE1B,EAAKsC,SAAS,CAACtC,WAAWkD,WAAWlD,SAG7C,MACA,IAAK,QAEL,KAAK,GACHqB,EAAaK,SAAQ,SAACkB,GACM,UAAvBA,EAAOZ,aACR,EAAKM,SAAS,CAAEtC,WAAY,EAAGmD,YAAa,EAAGC,eAAe,SAGpE,MACA,IAAK,IAEL,KAAK,GACH/B,EAAaK,SAAQ,SAACkB,GACpB,GAA0B,MAAvBA,EAAOZ,YAAoB,CAC5B,IAAIqB,EAAW,EAAKhB,MAAMrC,WACpBsD,EAAQ,EAAKR,cAAc,EAAKT,MAAMe,gBAC5C,EAAKd,SAAS,CAACc,eAAe,IAAKD,YAAYE,IAC/C,EAAKf,SAAS,CACZtC,WAAWsD,QAMrB,OAAOb,GAtQK,EAyQdI,kBAAoB,SAAClB,GACnB,IAAI3B,EAAa,EAAKqC,MAAMrC,WACK,MAA9B,EAAKqC,MAAMe,iBACZ,EAAKd,SAAS,CAACtC,WAAY,EAAGmD,YAAY,EAAGC,eAAe,MAC5DpD,EAAa,GAEf,IAAMuD,EAAmBR,OAAO/C,GAChC,GAAuB,MAApB2B,EAAIK,YAAoB,CACzB,GAAGuB,EAAiBC,SAAS,KAC3B,OAEAxD,EAAU,UAAMA,GAAN,OAAmB2B,EAAIK,aACjC,EAAKM,SAAS,CAACtC,WAAYA,SAG7BA,EAAU,UAAMA,GAAN,OAAmB2B,EAAIK,aACjC,EAAKM,SAAS,CAACtC,WAAYA,KAzRjB,EA6Rd8C,cAAgB,SAACW,GACf,IAAMN,EAAcD,WAAW,EAAKb,MAAMc,YAAa,IACjDnD,EAAakD,WAAW,EAAKb,MAAMrC,WAAY,IACjDqD,EAAWF,EACf,OAAO,EAAKd,MAAMe,gBAChB,QACEV,QAAQC,IAAI,wBACZ,MACF,IAAK,IACHU,EAAWF,EAAcnD,EACzB,MACF,IAAK,IACHqD,EAAWF,EAAcnD,EACzB,MACF,IAAK,IACHqD,EAAWF,EAAcnD,EACzB,MACF,IAAK,IACHqD,EAAWF,EAAcnD,EACzB,MACF,IAAK,IACHqD,EAAW,EAAKhB,MAAMrC,WAI1B,OADE,EAAKsC,SAAS,CAACc,eAAeK,EAAUN,YAAYE,IAC/CA,GApTN,EAAKhB,MAAQ,CACXG,MAAO,CAAC,SAAS,SAAS,UAC1B/C,YAAa,EACbO,WAAY,EACZmD,YAAa,EACbC,eAAgB,KAPP,E,qDAYb,WACCM,KAAKvB,qBACLO,QAAQC,IAAI,iCACZe,KAAKnB,sBACLG,QAAQC,IAAI,iCACZe,KAAKtC,gBACLsB,QAAQC,IAAI,4B,oBAuSd,WACED,QAAQC,IAAI,aAAce,KAAKrB,MAAMrC,YACrC0C,QAAQC,IAAI,iBAAkBe,KAAKrB,MAAMe,gBACzCV,QAAQC,IAAI,cAAee,KAAKrB,MAAMc,aACtC,IAAIQ,EAAiB,gBAAkBD,KAAKrB,MAAMG,MAAMkB,KAAKrB,MAAM5C,aACnE,OACE,qBAAKC,UAAWiE,EAAhB,SACE,sBAAKjE,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,YAAaiE,KAAKrB,MAAMG,MAAMkB,KAAKrB,MAAM5C,aAAcO,WAAY0D,KAAKrB,MAAMrC,aACtF,cAAC,EAAD,a,GAnUS4D,aCDnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASY,eAAe,W","file":"static/js/main.70903698.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Theme.css'\r\n\r\nconst Theme = ({activeTheme}) => {\r\n    return(\r\n        <div className=\"themeWrapper\">\r\n            <h3>THEME</h3>\r\n            <div className=\"toggleWrapper\" id=\"toggleWrapper\">\r\n                <h6>1</h6>\r\n                <h6>2</h6>\r\n                <h6>3</h6>\r\n                <div className=\"themeToggle\" id=\"themeSelector\">\r\n                    <div className=\"themeSelector\" style={{gridArea:activeTheme}}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Theme;","import React from 'react'\r\nimport './Screen.css'\r\n\r\nconst Screen = ({screenText}) => {\r\n    const numberWithCommas = (x) => {\r\n    if(screenText >=1) {\r\n        x = x.toString().replace(/^0+/, '')\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    } else if(screenText === 0){\r\n        return \"0\"\r\n    } else {\r\n        return screenText.toString()\r\n    }\r\n    }\r\n    let formatedScreenText = numberWithCommas(screenText).substring(0,14)\r\n\r\n    return(\r\n        <div className=\"screen\" id=\"screenText\">\r\n            <h2>{formatedScreenText}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Screen;","import React from 'react'\r\nimport './Header.css'\r\nimport Theme from '../Components/Theme'\r\nimport Screen from '../Components/Screen'\r\n\r\nconst Header = ( {activeTheme, screenText} ) => {\r\n    return(\r\n        <div className=\"topSection\" id=\"topSection\">\r\n            <div className=\"header\">\r\n                <h1 className=\"title\">calc</h1>\r\n                <Theme activeTheme={activeTheme} />\r\n            </div>\r\n            <Screen screenText={screenText}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = ( { text, gridName, fontSize, bgColor, fontColor, shadowColor, className } ) => {\r\n    const shadow = \"0 -0.15em 0 0px \" + shadowColor + \" inset\";\r\n    let buttonClass = \"btnStyle \" + className;\r\n    return(\r\n        <div className={buttonClass}\r\n        style={{\r\n            gridArea:`${gridName}`,\r\n            fontSize:`${fontSize}`,\r\n            backgroundColor:`${bgColor}`,\r\n            boxShadow:shadow,\r\n            color:`${fontColor}`\r\n            }}>\r\n            <p>{text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\nimport './Calculator.css'\r\nimport Button from '../Components/Button'\r\n\r\nconst Calculator = () => {\r\n    return(\r\n        <div className=\"buttonsContainer\">\r\n            <Button className=\"btn\" text=\"7\" gridName=\"seven\" fontSize=\"1.6em\" fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"8\" gridName=\"eight\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"9\" gridName=\"nine\" fontSize=\"1.6m\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"DEL\" gridName=\"del\" fontSize=\"1.2em\" fontColor=\"var(--clr-text-secondary)\" shadowColor=\"var(--clr-keys-reset-shadow)\" bgColor=\"var(--clr-keys-reset-bg)\" />\r\n            <Button className=\"btn\" text=\"4\" gridName=\"four\" fontSize=\"1.86m\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"5\" gridName=\"five\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"6\" gridName=\"six\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"+\" gridName=\"plus\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"1\" gridName=\"one\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"2\" gridName=\"two\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"3\" gridName=\"three\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"-\" gridName=\"minus\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\".\" gridName=\"dot\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"0\" gridName=\"zero\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"/\" gridName=\"divide\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"x\" gridName=\"multiply\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button className=\"btn\" text=\"RESET\" gridName=\"reset\" fontSize=\"1.2em\" fontColor=\"var(--clr-text-secondary)\" shadowColor=\"var(--clr-keys-reset-shadow)\" bgColor=\"var(--clr-keys-reset-bg)\" />\r\n            <Button className=\"btn\" text=\"=\" gridName=\"equals\" fontSize=\"1.6em\" fontColor=\"var(--clr-text-secondary)\" shadowColor=\"var(--clr-keys-equals-shadow)\" bgColor=\"var(--clr-keys-equals-bg)\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calculator;","\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Calculator from './Calculator';\r\n\r\n class App extends Component {\r\n   constructor(){\r\n     super();\r\n     this.state = {\r\n       theme: [\"Theme1\",\"Theme2\",\"Theme3\"],\r\n       activeTheme: 0,\r\n       screenText: 0,\r\n       storedValue: 0,\r\n       activeModifier: \"+\"\r\n     }\r\n\r\n   }\r\n\r\n   componentDidMount(){\r\n    this.createThemeToggler()\r\n    console.log(\"ThemeToggler has been created\")\r\n    this.setHeadingFontColor()\r\n    console.log(\"HeadingFontColor has been set\")\r\n    this.createButtons()\r\n    console.log(\"btns have been created\")\r\n   }\r\n\r\n   createButtons = () =>{\r\n    const buttonsArray = Array.from(document.getElementsByClassName(\"btn\"))\r\n\r\n    // add onClick eventlistener to all buttons\r\n    buttonsArray.forEach((btn)=>{\r\n      btn.addEventListener(\"click\", (event) =>{\r\n        this.getKeyCode(event.target.textContent, buttonsArray)\r\n      },\r\n      false\r\n      )\r\n    })\r\n    // add keypress event listeners for keynum use\r\n    document.addEventListener(\"keydown\", (event) =>{this.getKeyCode(parseInt(event.keyCode), buttonsArray)}) //add event listener to all buttons, then call getKeyCode function on keypress with the key code being converted to Int before being passed through\r\n  }\r\n\r\n  createThemeToggler = () =>{\r\n    const themeToggle = document.getElementById(\"themeSelector\")\r\n    themeToggle.addEventListener(\"click\", () => {\r\n      let activeTheme = this.state.activeTheme;\r\n      if (activeTheme >= 2){\r\n        activeTheme = 0\r\n      } else {\r\n        activeTheme = activeTheme + 1\r\n      }\r\n      this.setState({activeTheme: activeTheme})\r\n      this.setHeadingFontColor();\r\n    })\r\n  }\r\n\r\n  setHeadingFontColor = () =>{\r\n    const screenText = document.getElementById(\"topSection\")\r\n    if(this.state.theme[this.state.activeTheme] === \"Theme1\"){\r\n      screenText.style.color = \"var(--clr-text-secondary)\"\r\n    } else {\r\n      screenText.style.color = \"var(--clr-text-primary)\"\r\n    }\r\n  }\r\n\r\n  getKeyCode = (key, buttonsArray) =>{\r\n    switch(key){\r\n      default:\r\n        console.log(key, \"was pressed\")\r\n        break\r\n      case \"0\":\r\n        //fallsthrough\r\n      case 48:\r\n        //fallsthrough\r\n      case 96:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"0\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"1\":\r\n        //fallsthrough\r\n      case 49:\r\n        //fallsthrough\r\n      case 97:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"1\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"2\":\r\n        //fallsthrough\r\n      case 50:\r\n        //fallsthrough\r\n      case 98:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"2\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"3\":\r\n        //fallsthrough\r\n      case 51:\r\n        //fallsthrough\r\n      case 99:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"3\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"4\":\r\n        //fallsthrough\r\n      case 52:\r\n        //fallsthrough\r\n      case 100:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"4\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"5\":\r\n        //fallsthrough\r\n      case 53:\r\n        //fallsthrough\r\n      case 101:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"5\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"6\":\r\n        //fallsthrough\r\n      case 54:\r\n        //fallsthrough\r\n      case 102:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"6\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"7\":\r\n        //fallsthrough\r\n      case 55:\r\n        //fallsthrough\r\n      case 103:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"7\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"8\":\r\n        //fallsthrough\r\n      case 56:\r\n        //fallsthrough\r\n      case 104:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"8\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"9\":\r\n        //fallsthrough\r\n      case 57:\r\n        //fallsthrough\r\n      case 105:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"9\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"x\":\r\n        //fallsthrough\r\n      case 106:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"x\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \"+\":\r\n        //fallsthrough\r\n      case 107:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"+\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \"-\":\r\n        //fallsthrough\r\n      case 109:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"-\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \".\":\r\n        //fallsthrough\r\n      case 110:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \".\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \"/\":\r\n        //fallsthrough\r\n      case 111:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"/\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \"DEL\":\r\n        //fallsthrough\r\n      case 8:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"DEL\"){\r\n            let screenText = String(this.state.screenText) // convert screenText to a string for easy manipulation\r\n            screenText = screenText.slice(0,-1) // remove last character then convert back to string before assigning to screenText\r\n            if(screenText.length <= 0){\r\n              this.setState({screenText:0})\r\n            } else {\r\n              this.setState({screenText:parseFloat(screenText)})\r\n            }\r\n          }})\r\n      break\r\n      case \"RESET\":\r\n        //fallsthrough\r\n      case 27:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"RESET\"){\r\n            this.setState({ screenText: 0, storedValue: 0, activeModifier:\"+\" })\r\n          }\r\n        })\r\n      break\r\n      case \"=\":\r\n        //fallsthrough\r\n      case 13:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"=\"){\r\n            let newValue = this.state.screenText\r\n            const total = this.applyModifier(this.state.activeModifier)\r\n            this.setState({activeModifier:\"=\", storedValue:newValue})\r\n            this.setState({\r\n              screenText:total,\r\n            })\r\n          }\r\n        })\r\n      break\r\n    }\r\n    return key\r\n  }\r\n\r\n  numberButtonInput = (btn) =>{\r\n    let screenText = this.state.screenText\r\n    if(this.state.activeModifier === \"=\"){\r\n      this.setState({screenText: 0, storedValue:0, activeModifier:\"+\"}) //if the use has pressed = button, reset everything to zero\r\n      screenText = 0\r\n    }\r\n    const screenTextString = String(screenText)\r\n    if(btn.textContent === \".\"){ //check to see if there is already a decimal in the number and do nothing if there is\r\n      if(screenTextString.includes(\".\")){\r\n        return\r\n      } else {\r\n        screenText = `${screenText}${btn.textContent}`\r\n        this.setState({screenText: screenText})\r\n      }\r\n    } else {\r\n      screenText = `${screenText}${btn.textContent}`\r\n      this.setState({screenText: screenText})\r\n    }\r\n  }\r\n\r\n  applyModifier = (modifier) =>{\r\n    const storedValue = parseFloat(this.state.storedValue, 10)\r\n    const screenText = parseFloat(this.state.screenText, 10)\r\n    let newValue = storedValue\r\n    switch(this.state.activeModifier){\r\n      default:\r\n        console.log(\"a number was clicked\")\r\n        break\r\n      case \"+\":\r\n        newValue = storedValue + screenText\r\n        break\r\n      case \"-\":\r\n        newValue = storedValue - screenText\r\n        break\r\n      case \"x\":\r\n        newValue = storedValue * screenText\r\n        break\r\n      case \"/\":\r\n        newValue = storedValue / screenText\r\n        break\r\n      case \"=\":\r\n        newValue = this.state.screenText\r\n        break\r\n      }\r\n      this.setState({activeModifier:modifier, storedValue:newValue})\r\n    return newValue\r\n  }\r\n\r\n  render(){\r\n    console.log(\"screenText\", this.state.screenText)\r\n    console.log(\"activeModifier\", this.state.activeModifier)\r\n    console.log(\"storedValue\", this.state.storedValue)\r\n    let themeClassName = \"AppContainer \" + this.state.theme[this.state.activeTheme];\r\n    return (\r\n      <div className={themeClassName}>\r\n        <div className=\"App\">\r\n          <Header activeTheme={this.state.theme[this.state.activeTheme]} screenText={this.state.screenText}/>\r\n          <Calculator />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}