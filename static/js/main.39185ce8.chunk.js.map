{"version":3,"sources":["Components/Theme.js","Components/Screen.js","Containers/Header.js","Components/Button.js","Containers/Calculator.js","Containers/App.js","index.js"],"names":["Theme","activeTheme","className","id","style","gridArea","Screen","x","screenText","formatedScreenText","toString","replace","substring","Header","Button","text","gridName","fontSize","bgColor","fontColor","shadow","shadowColor","backgroundColor","boxShadow","color","Calculator","App","createButtons","buttonsArray","Array","from","document","getElementsByClassName","forEach","btn","addEventListener","event","getKeyCode","target","textContent","parseInt","keyCode","createThemeToggler","getElementById","state","setState","setHeadingFontColor","theme","key","button","numberButtonInput","applyModifier","String","slice","length","parseFloat","storedValue","activeModifier","newValue","total","screenTextString","includes","modifier","this","console","log","themeClassName","Component","ReactDOM","render","StrictMode"],"mappings":"qYAmBeA,EAhBD,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACZ,OACI,sBAAKC,UAAU,eAAf,UACI,uCACA,sBAAKA,UAAU,gBAAgBC,GAAG,gBAAlC,UACI,mCACA,mCACA,mCACA,qBAAKD,UAAU,cAAcC,GAAG,gBAAhC,SACI,qBAAKD,UAAU,gBAAgBE,MAAO,CAACC,SAASJ,cCWrDK,G,MApBA,SAAC,GAAkB,IACJC,EADbC,EAAgB,EAAhBA,WAWTC,GAVsBF,EAUgBC,EATvCA,GAAa,GACZD,EAAIA,EAAEG,WAAWC,QAAQ,MAAO,KACvBD,WAAWC,QAAQ,wBAAyB,KAChC,IAAfH,EACC,IAEAA,EAAWE,YAGgCE,UAAU,EAAE,IAElE,OACI,qBAAKV,UAAU,SAASC,GAAG,aAA3B,SACI,6BAAKM,QCDFI,EAZA,SAAC,GAAiC,IAA/BZ,EAA8B,EAA9BA,YAAaO,EAAiB,EAAjBA,WAC3B,OACI,sBAAKN,UAAU,aAAaC,GAAG,aAA/B,UACI,sBAAKD,UAAU,SAAf,UACI,oBAAIA,UAAU,QAAd,kBACA,cAAC,EAAD,CAAOD,YAAaA,OAExB,cAAC,EAAD,CAAQO,WAAYA,QCOjBM,G,YAhBA,SAAC,GAAqE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,UAC5CC,EAAS,mBADiE,EAAnBC,YACX,SAClD,OACI,qBAAKnB,UAAU,eACfE,MAAO,CACHC,SAASW,EACTC,SAASA,EACTK,gBAAgBJ,EAChBK,UAAUH,EACVI,MAAML,GANV,SAQI,4BAAIJ,QCeDU,EAzBI,WACf,OACI,sBAAKvB,UAAU,mBAAf,UACI,cAAC,EAAD,CAAQa,KAAK,IAAIC,SAAS,QAAQC,SAAS,QAAQE,UAAU,0BAA0BE,YAAY,mCACnG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,QAAQC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACpG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,OAAOC,SAAS,OAAQE,UAAU,0BAA0BE,YAAY,mCAClG,cAAC,EAAD,CAAQN,KAAK,MAAMC,SAAS,MAAMC,SAAS,QAAQE,UAAU,4BAA4BE,YAAY,+BAA+BH,QAAQ,6BAC5I,cAAC,EAAD,CAAQH,KAAK,IAAIC,SAAS,OAAOC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACnG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,OAAOC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACnG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,MAAMC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCAClG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,OAAOC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACnG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,MAAMC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCAClG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,MAAMC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCAClG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,QAAQC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACpG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,QAAQC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACpG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,MAAMC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCAClG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,OAAOC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACnG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,SAASC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACrG,cAAC,EAAD,CAAQN,KAAK,IAAIC,SAAS,WAAWC,SAAS,QAASE,UAAU,0BAA0BE,YAAY,mCACvG,cAAC,EAAD,CAAQN,KAAK,QAAQC,SAAS,QAAQC,SAAS,QAAQE,UAAU,4BAA4BE,YAAY,+BAA+BH,QAAQ,6BAChJ,cAAC,EAAD,CAAQH,KAAK,IAAIC,SAAS,SAASC,SAAS,QAAQE,UAAU,4BAA4BE,YAAY,gCAAgCH,QAAQ,kCCiT3IQ,E,kDAlUZ,aAAc,IAAD,8BACX,gBAiBFC,cAAgB,WACf,IAAMC,EAAeC,MAAMC,KAAKC,SAASC,uBAAuB,QAGhEJ,EAAaK,SAAQ,SAACC,GACpBA,EAAIC,iBAAiB,SAAS,SAACC,GAC7B,EAAKC,WAAWD,EAAME,OAAOC,YAAaX,MAE5C,MAIFG,SAASI,iBAAiB,WAAW,SAACC,GAAU,EAAKC,WAAWG,SAASJ,EAAMK,SAAUb,OA9B7E,EAiCdc,mBAAqB,WACCX,SAASY,eAAe,iBAChCR,iBAAiB,SAAS,WACpC,IAAIlC,EAAc,EAAK2C,MAAM3C,YACzBA,GAAe,EACjBA,EAAc,EAEdA,GAA4B,EAE9B,EAAK4C,SAAS,CAAC5C,YAAaA,IAC5B,EAAK6C,0BA3CK,EA+CdA,oBAAsB,WACpB,IAAMtC,EAAauB,SAASY,eAAe,cACK,WAA7C,EAAKC,MAAMG,MAAM,EAAKH,MAAM3C,aAC7BO,EAAWJ,MAAMoB,MAAQ,4BAEzBhB,EAAWJ,MAAMoB,MAAQ,2BApDf,EAwDda,WAAa,SAACW,EAAKpB,GACjB,OAAOoB,GACL,QACE,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,GACHpB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,GACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,GACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,GACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,IACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG3B,MACF,IAAK,IAEL,KAAK,GAEL,KAAK,IACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,GAEL,KAAK,IACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,GAEL,KAAK,IACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,GAEL,KAAK,IACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,GAEL,KAAK,IACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,aACR,EAAKW,kBAAkBD,MAG7B,MACA,IAAK,IAEL,KAAK,IACHrB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,cACR,EAAKY,cAAcF,EAAOV,aAC1B,EAAKM,SAAS,CAACrC,WAAY,QAGjC,MACA,IAAK,IAEL,KAAK,IACHoB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,cACR,EAAKY,cAAcF,EAAOV,aAC1B,EAAKM,SAAS,CAACrC,WAAY,QAGjC,MACA,IAAK,IAEL,KAAK,IACHoB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,cACR,EAAKY,cAAcF,EAAOV,aAC1B,EAAKM,SAAS,CAACrC,WAAY,QAGjC,MACA,IAAK,IAEL,KAAK,IACHoB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,cACR,EAAKY,cAAcF,EAAOV,aAC1B,EAAKM,SAAS,CAACrC,WAAY,QAGjC,MACA,IAAK,IAEL,KAAK,IACHoB,EAAaK,SAAQ,SAACgB,GACM,MAAvBA,EAAOV,cACR,EAAKY,cAAcF,EAAOV,aAC1B,EAAKM,SAAS,CAACrC,WAAY,QAGjC,MACA,IAAK,MAEL,KAAK,EACHoB,EAAaK,SAAQ,SAACgB,GACpB,GAA0B,QAAvBA,EAAOV,YAAsB,CAC9B,IAAI/B,EAAa4C,OAAO,EAAKR,MAAMpC,aACnCA,EAAaA,EAAW6C,MAAM,GAAG,IACnBC,QAAU,EACtB,EAAKT,SAAS,CAACrC,WAAW,IAE1B,EAAKqC,SAAS,CAACrC,WAAW+C,WAAW/C,SAG7C,MACA,IAAK,QAEL,KAAK,GACHoB,EAAaK,SAAQ,SAACgB,GACM,UAAvBA,EAAOV,aACR,EAAKM,SAAS,CAAErC,WAAY,EAAGgD,YAAa,EAAGC,eAAe,SAGpE,MACA,IAAK,IAEL,KAAK,GACH7B,EAAaK,SAAQ,SAACgB,GACpB,GAA0B,MAAvBA,EAAOV,YAAoB,CAC5B,IAAImB,EAAW,EAAKd,MAAMpC,WACpBmD,EAAQ,EAAKR,cAAc,EAAKP,MAAMa,gBAC5C,EAAKZ,SAAS,CAACY,eAAe,IAAKD,YAAYE,IAC/C,EAAKb,SAAS,CACZrC,WAAWmD,QAMrB,OAAOX,GAlQK,EAqQdE,kBAAoB,SAAChB,GACnB,IAAI1B,EAAa,EAAKoC,MAAMpC,WACK,MAA9B,EAAKoC,MAAMa,iBACZ,EAAKZ,SAAS,CAACrC,WAAY,EAAGgD,YAAY,EAAGC,eAAe,MAC5DjD,EAAa,GAEf,IAAMoD,EAAmBR,OAAO5C,GAChC,GAAuB,MAApB0B,EAAIK,YAAoB,CACzB,GAAGqB,EAAiBC,SAAS,KAC3B,OAEArD,EAAU,UAAMA,GAAN,OAAmB0B,EAAIK,aACjC,EAAKM,SAAS,CAACrC,WAAYA,SAG7BA,EAAU,UAAMA,GAAN,OAAmB0B,EAAIK,aACjC,EAAKM,SAAS,CAACrC,WAAYA,KArRjB,EAyRd2C,cAAgB,SAACW,GACf,IAAMN,EAAcD,WAAW,EAAKX,MAAMY,YAAa,IACjDhD,EAAa+C,WAAW,EAAKX,MAAMpC,WAAY,IACjDkD,EAAWF,EACf,OAAO,EAAKZ,MAAMa,gBAChB,QACE,MACF,IAAK,IACHC,EAAWF,EAAchD,EACzB,MACF,IAAK,IACHkD,EAAWF,EAAchD,EACzB,MACF,IAAK,IACHkD,EAAWF,EAAchD,EACzB,MACF,IAAK,IACHkD,EAAWF,EAAchD,EACzB,MACF,IAAK,IACHkD,EAAW,EAAKd,MAAMpC,WAI1B,OADE,EAAKqC,SAAS,CAACY,eAAeK,EAAUN,YAAYE,IAC/CA,GA/SN,EAAKd,MAAQ,CACXG,MAAO,CAAC,SAAS,SAAS,UAC1B9C,YAAa,EACbO,WAAY,EACZgD,YAAa,EACbC,eAAgB,KAPP,E,qDAYb,WACCM,KAAKrB,qBACLqB,KAAKjB,sBACLiB,KAAKpC,kB,oBAqSP,WACEqC,QAAQC,IAAIlC,SAASC,uBAAuB,aAC5C,IAAIkC,EAAiB,gBAAkBH,KAAKnB,MAAMG,MAAMgB,KAAKnB,MAAM3C,aACnE,OACE,qBAAKC,UAAWgE,EAAhB,SACE,sBAAKhE,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,YAAa8D,KAAKnB,MAAMG,MAAMgB,KAAKnB,MAAM3C,aAAcO,WAAYuD,KAAKnB,MAAMpC,aACtF,cAAC,EAAD,a,GA5TS2D,aCDnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASY,eAAe,W","file":"static/js/main.39185ce8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Theme.css'\r\n\r\nconst Theme = ({activeTheme}) => {\r\n    return(\r\n        <div className=\"themeWrapper\">\r\n            <h3>THEME</h3>\r\n            <div className=\"toggleWrapper\" id=\"toggleWrapper\">\r\n                <h6>1</h6>\r\n                <h6>2</h6>\r\n                <h6>3</h6>\r\n                <div className=\"themeToggle\" id=\"themeSelector\">\r\n                    <div className=\"themeSelector\" style={{gridArea:activeTheme}}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Theme;","import React from 'react'\r\nimport './Screen.css'\r\n\r\nconst Screen = ({screenText}) => {\r\n    const numberWithCommas = (x) => {\r\n    if(screenText >=1) {\r\n        x = x.toString().replace(/^0+/, '')\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    } else if(screenText === 0){\r\n        return \"0\"\r\n    } else {\r\n        return screenText.toString()\r\n    }\r\n    }\r\n    let formatedScreenText = numberWithCommas(screenText).substring(0,14)\r\n\r\n    return(\r\n        <div className=\"screen\" id=\"screenText\">\r\n            <h2>{formatedScreenText}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Screen;","import React from 'react'\r\nimport './Header.css'\r\nimport Theme from '../Components/Theme'\r\nimport Screen from '../Components/Screen'\r\n\r\nconst Header = ( {activeTheme, screenText} ) => {\r\n    return(\r\n        <div className=\"topSection\" id=\"topSection\">\r\n            <div className=\"header\">\r\n                <h1 className=\"title\">calc</h1>\r\n                <Theme activeTheme={activeTheme} />\r\n            </div>\r\n            <Screen screenText={screenText}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = ( { text, gridName, fontSize, bgColor, fontColor, shadowColor } ) => {\r\n    const shadow = \"0 -0.15em 0 0px \" + shadowColor + \" inset\";\r\n    return(\r\n        <div className=\"btnStyle btn\"\r\n        style={{\r\n            gridArea:gridName,\r\n            fontSize:fontSize,\r\n            backgroundColor:bgColor,\r\n            boxShadow:shadow,\r\n            color:fontColor\r\n            }}>\r\n            <p>{text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\nimport './Calculator.css'\r\nimport Button from '../Components/Button'\r\n\r\nconst Calculator = () => {\r\n    return(\r\n        <div className=\"buttonsContainer\">\r\n            <Button text=\"7\" gridName=\"seven\" fontSize=\"1.6em\" fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"8\" gridName=\"eight\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"9\" gridName=\"nine\" fontSize=\"1.6m\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"DEL\" gridName=\"del\" fontSize=\"1.2em\" fontColor=\"var(--clr-text-secondary)\" shadowColor=\"var(--clr-keys-reset-shadow)\" bgColor=\"var(--clr-keys-reset-bg)\" />\r\n            <Button text=\"4\" gridName=\"four\" fontSize=\"1.86m\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"5\" gridName=\"five\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"6\" gridName=\"six\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"+\" gridName=\"plus\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"1\" gridName=\"one\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"2\" gridName=\"two\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"3\" gridName=\"three\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"-\" gridName=\"minus\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\".\" gridName=\"dot\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"0\" gridName=\"zero\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"/\" gridName=\"divide\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"x\" gridName=\"multiply\" fontSize=\"1.6em\"  fontColor=\"var(--clr-text-primary)\" shadowColor=\"var(--clr-keys-primary-shadow)\"/>\r\n            <Button text=\"RESET\" gridName=\"reset\" fontSize=\"1.2em\" fontColor=\"var(--clr-text-secondary)\" shadowColor=\"var(--clr-keys-reset-shadow)\" bgColor=\"var(--clr-keys-reset-bg)\" />\r\n            <Button text=\"=\" gridName=\"equals\" fontSize=\"1.6em\" fontColor=\"var(--clr-text-secondary)\" shadowColor=\"var(--clr-keys-equals-shadow)\" bgColor=\"var(--clr-keys-equals-bg)\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calculator;","\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Calculator from './Calculator';\r\n\r\n class App extends Component {\r\n   constructor(){\r\n     super();\r\n     this.state = {\r\n       theme: [\"Theme1\",\"Theme2\",\"Theme3\"],\r\n       activeTheme: 0,\r\n       screenText: 0,\r\n       storedValue: 0,\r\n       activeModifier: \"+\"\r\n     }\r\n\r\n   }\r\n\r\n   componentDidMount(){\r\n    this.createThemeToggler()\r\n    this.setHeadingFontColor()\r\n    this.createButtons()\r\n   }\r\n\r\n   createButtons = () =>{\r\n    const buttonsArray = Array.from(document.getElementsByClassName(\"btn\"))\r\n\r\n    // add onClick eventlistener to all buttons\r\n    buttonsArray.forEach((btn)=>{\r\n      btn.addEventListener(\"click\", (event) =>{\r\n        this.getKeyCode(event.target.textContent, buttonsArray)\r\n      },\r\n      false\r\n      )\r\n    })\r\n    // add keypress event listeners for keynum use\r\n    document.addEventListener(\"keydown\", (event) =>{this.getKeyCode(parseInt(event.keyCode), buttonsArray)}) //add event listener to all buttons, then call getKeyCode function on keypress with the key code being converted to Int before being passed through\r\n  }\r\n\r\n  createThemeToggler = () =>{\r\n    const themeToggle = document.getElementById(\"themeSelector\")\r\n    themeToggle.addEventListener(\"click\", () => {\r\n      let activeTheme = this.state.activeTheme;\r\n      if (activeTheme >= 2){\r\n        activeTheme = 0\r\n      } else {\r\n        activeTheme = activeTheme + 1\r\n      }\r\n      this.setState({activeTheme: activeTheme})\r\n      this.setHeadingFontColor();\r\n    })\r\n  }\r\n\r\n  setHeadingFontColor = () =>{\r\n    const screenText = document.getElementById(\"topSection\")\r\n    if(this.state.theme[this.state.activeTheme] === \"Theme1\"){\r\n      screenText.style.color = \"var(--clr-text-secondary)\"\r\n    } else {\r\n      screenText.style.color = \"var(--clr-text-primary)\"\r\n    }\r\n  }\r\n\r\n  getKeyCode = (key, buttonsArray) =>{\r\n    switch(key){\r\n      default:\r\n        break\r\n      case \"0\":\r\n        //fallsthrough\r\n      case 48:\r\n        //fallsthrough\r\n      case 96:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"0\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"1\":\r\n        //fallsthrough\r\n      case 49:\r\n        //fallsthrough\r\n      case 97:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"1\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"2\":\r\n        //fallsthrough\r\n      case 50:\r\n        //fallsthrough\r\n      case 98:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"2\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"3\":\r\n        //fallsthrough\r\n      case 51:\r\n        //fallsthrough\r\n      case 99:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"3\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"4\":\r\n        //fallsthrough\r\n      case 52:\r\n        //fallsthrough\r\n      case 100:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"4\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n        break\r\n      case \"5\":\r\n        //fallsthrough\r\n      case 53:\r\n        //fallsthrough\r\n      case 101:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"5\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"6\":\r\n        //fallsthrough\r\n      case 54:\r\n        //fallsthrough\r\n      case 102:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"6\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"7\":\r\n        //fallsthrough\r\n      case 55:\r\n        //fallsthrough\r\n      case 103:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"7\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"8\":\r\n        //fallsthrough\r\n      case 56:\r\n        //fallsthrough\r\n      case 104:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"8\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"9\":\r\n        //fallsthrough\r\n      case 57:\r\n        //fallsthrough\r\n      case 105:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"9\"){\r\n            this.numberButtonInput(button)\r\n          }\r\n        })\r\n      break\r\n      case \"x\":\r\n        //fallsthrough\r\n      case 106:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"x\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \"+\":\r\n        //fallsthrough\r\n      case 107:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"+\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \"-\":\r\n        //fallsthrough\r\n      case 109:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"-\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \".\":\r\n        //fallsthrough\r\n      case 110:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \".\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \"/\":\r\n        //fallsthrough\r\n      case 111:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"/\"){\r\n            this.applyModifier(button.textContent)\r\n            this.setState({screenText: 0})\r\n          }\r\n        })\r\n      break\r\n      case \"DEL\":\r\n        //fallsthrough\r\n      case 8:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"DEL\"){\r\n            let screenText = String(this.state.screenText) // convert screenText to a string for easy manipulation\r\n            screenText = screenText.slice(0,-1) // remove last character then convert back to string before assigning to screenText\r\n            if(screenText.length <= 0){\r\n              this.setState({screenText:0})\r\n            } else {\r\n              this.setState({screenText:parseFloat(screenText)})\r\n            }\r\n          }})\r\n      break\r\n      case \"RESET\":\r\n        //fallsthrough\r\n      case 27:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"RESET\"){\r\n            this.setState({ screenText: 0, storedValue: 0, activeModifier:\"+\" })\r\n          }\r\n        })\r\n      break\r\n      case \"=\":\r\n        //fallsthrough\r\n      case 13:\r\n        buttonsArray.forEach((button) =>{\r\n          if(button.textContent === \"=\"){\r\n            let newValue = this.state.screenText\r\n            const total = this.applyModifier(this.state.activeModifier)\r\n            this.setState({activeModifier:\"=\", storedValue:newValue})\r\n            this.setState({\r\n              screenText:total,\r\n            })\r\n          }\r\n        })\r\n      break\r\n    }\r\n    return key\r\n  }\r\n\r\n  numberButtonInput = (btn) =>{\r\n    let screenText = this.state.screenText\r\n    if(this.state.activeModifier === \"=\"){\r\n      this.setState({screenText: 0, storedValue:0, activeModifier:\"+\"}) //if the use has pressed = button, reset everything to zero\r\n      screenText = 0\r\n    }\r\n    const screenTextString = String(screenText)\r\n    if(btn.textContent === \".\"){ //check to see if there is already a decimal in the number and do nothing if there is\r\n      if(screenTextString.includes(\".\")){\r\n        return\r\n      } else {\r\n        screenText = `${screenText}${btn.textContent}`\r\n        this.setState({screenText: screenText})\r\n      }\r\n    } else {\r\n      screenText = `${screenText}${btn.textContent}`\r\n      this.setState({screenText: screenText})\r\n    }\r\n  }\r\n\r\n  applyModifier = (modifier) =>{\r\n    const storedValue = parseFloat(this.state.storedValue, 10)\r\n    const screenText = parseFloat(this.state.screenText, 10)\r\n    let newValue = storedValue\r\n    switch(this.state.activeModifier){\r\n      default:\r\n        break\r\n      case \"+\":\r\n        newValue = storedValue + screenText\r\n        break\r\n      case \"-\":\r\n        newValue = storedValue - screenText\r\n        break\r\n      case \"x\":\r\n        newValue = storedValue * screenText\r\n        break\r\n      case \"/\":\r\n        newValue = storedValue / screenText\r\n        break\r\n      case \"=\":\r\n        newValue = this.state.screenText\r\n        break\r\n      }\r\n      this.setState({activeModifier:modifier, storedValue:newValue})\r\n    return newValue\r\n  }\r\n\r\n  render(){\r\n    console.log(document.getElementsByClassName(\"btnStyle\"))\r\n    let themeClassName = \"AppContainer \" + this.state.theme[this.state.activeTheme];\r\n    return (\r\n      <div className={themeClassName}>\r\n        <div className=\"App\">\r\n          <Header activeTheme={this.state.theme[this.state.activeTheme]} screenText={this.state.screenText}/>\r\n          <Calculator />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}